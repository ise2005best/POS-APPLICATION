/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/Other/File.java to edit this template
 */
package exam_project;

import java.sql.Connection;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.util.Date;
import java.util.Properties;
import javax.mail.Message;
import javax.mail.PasswordAuthentication;
import javax.mail.Session;
import javax.mail.Transport;
import javax.mail.internet.InternetAddress;
import javax.mail.internet.MimeMessage;
import javax.swing.JOptionPane;
import java.sql.ResultSet;
import java.util.Objects;

/**
 *
 * @author iseoluwaariyibi
 */
public class notificationsFile {
    String usersEmail;
    public String getUsersEmail(int staffID){
        try {
            Class.forName("com.mysql.cj.jdbc.Driver");
            Connection con = DriverManager.getConnection("jdbc:mysql://localhost:3306" + "/POS_EXAM", "root", "damilOlamide14$");
            PreparedStatement ps = con.prepareStatement("SELECT Email FROM users WHERE StaffID = ?");
            ps.setInt(1, staffID);
            ResultSet rs = ps.executeQuery();
            while(rs.next()){
                usersEmail = rs.getString(1);
            }
        } catch (Exception e) {
            System.out.println(e);
        }
        return usersEmail;
    }
     public void happyBirthdayEmail(String usersEmail, String usersFirstName){
        try {
            String senderEmail = "iseoluwaariyibi@gmail.com";
            // password generated by app and not actual password
            String senderPassword = "osywdikxkrhyloru";
            Properties props = new Properties();
            props.put("mail.smtp.auth", true);
            props.put("mail.smtp.starttls.enable", true);
            props.put("mail.smtp.host", "smtp.gmail.com");
            props.put("mail.smtp.port", "587");

            Session session = Session.getInstance(props,
                    new javax.mail.Authenticator() {
                protected PasswordAuthentication getPasswordAuthentication() {
                    return new PasswordAuthentication(senderEmail, senderPassword);
                }
            }
            );
            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress(senderEmail));
            message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(usersEmail));
            message.setSubject("Happy Birthdayyyyy");
            message.setText(
                    "           Happy Birthday " + usersFirstName + " !!!! \n"
                    + "         We want you to know how much we appreciate you and the work you do. Thank you for being a part of ISESEN Supermarket!"
                    + "         This is a system-generated email. Please do not reply.\n"
            );
            Transport.send(message);
        } catch (Exception e) {
            System.out.println(e);
        }
    }
     
    public void expiryDateNearEmail(String usersEmail, String usersFirstName, String productName, Date expiryDate){
        try {
            String senderEmail = "iseoluwaariyibi@gmail.com";
            // password generated by app and not actual password
            String senderPassword = "osywdikxkrhyloru";
            Properties props = new Properties();
            props.put("mail.smtp.auth", true);
            props.put("mail.smtp.starttls.enable", true);
            props.put("mail.smtp.host", "smtp.gmail.com");
            props.put("mail.smtp.port", "587");

            Session session = Session.getInstance(props,
                    new javax.mail.Authenticator() {
                protected PasswordAuthentication getPasswordAuthentication() {
                    return new PasswordAuthentication(senderEmail, senderPassword);
                }
            }
            );
            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress(senderEmail));
            message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(usersEmail));
            message.setSubject("Expiry Date Approaching");
            message.setText(
                    "           Dear " + usersFirstName + "\n"
                    + "         The following product is low on stock\n"
                    +  "       Product:  " + productName + "\n   Product Expiry Date " + expiryDate.toString() + "\n"
                    + "          Please kindly notify the producers \n"
                    + "This is a system generated email, Please do not reply"
            );
            Transport.send(message);
        } catch (Exception e) {
            System.out.println(e);
            
        }
    }
    
    public void lowStockLevelsEmail (String usersEmail, String usersFirstName, String productName, int quantity){
        try {
             String senderEmail = "iseoluwaariyibi@gmail.com";
            // password generated by app and not actual password
            String senderPassword = "osywdikxkrhyloru";
            Properties props = new Properties();
            props.put("mail.smtp.auth", true);
            props.put("mail.smtp.starttls.enable", true);
            props.put("mail.smtp.host", "smtp.gmail.com");
            props.put("mail.smtp.port", "587");

            Session session = Session.getInstance(props,
                    new javax.mail.Authenticator() {
                protected PasswordAuthentication getPasswordAuthentication() {
                    return new PasswordAuthentication(senderEmail, senderPassword);
                }
            }
            );
            Message message = new MimeMessage(session);
            message.setFrom(new InternetAddress(senderEmail));
            message.setRecipients(Message.RecipientType.TO, InternetAddress.parse(usersEmail));
            message.setSubject("Low Stock Alert");
            message.setText(
                    "          Dear " + usersFirstName + "\n"
                    + "        The following product is low on stock \n"
                    +           "Product  " + productName + " Quantity " + quantity + " \n"
                    + "          Please kindly notify the producers \n"
                    + "This is a system generated email, Please do not reply"
            );
            Transport.send(message);
        } catch (Exception e) {
            System.out.println(e);
        }
    }
     
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        
        // TODO code application logic here
    }
}
